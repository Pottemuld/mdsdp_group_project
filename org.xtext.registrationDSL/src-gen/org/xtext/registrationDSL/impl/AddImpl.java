/**
 * generated by Xtext 2.25.0
 */
package org.xtext.registrationDSL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.registrationDSL.Add;
import org.xtext.registrationDSL.Entity;
import org.xtext.registrationDSL.RegistrationDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Add</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.registrationDSL.impl.AddImpl#getSelectedEntityName <em>Selected Entity Name</em>}</li>
 *   <li>{@link org.xtext.registrationDSL.impl.AddImpl#getToEntity <em>To Entity</em>}</li>
 *   <li>{@link org.xtext.registrationDSL.impl.AddImpl#getToEntityRelation <em>To Entity Relation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AddImpl extends StatementImpl implements Add
{
  /**
   * The default value of the '{@link #getSelectedEntityName() <em>Selected Entity Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelectedEntityName()
   * @generated
   * @ordered
   */
  protected static final String SELECTED_ENTITY_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSelectedEntityName() <em>Selected Entity Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelectedEntityName()
   * @generated
   * @ordered
   */
  protected String selectedEntityName = SELECTED_ENTITY_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getToEntity() <em>To Entity</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToEntity()
   * @generated
   * @ordered
   */
  protected Entity toEntity;

  /**
   * The default value of the '{@link #getToEntityRelation() <em>To Entity Relation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToEntityRelation()
   * @generated
   * @ordered
   */
  protected static final String TO_ENTITY_RELATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getToEntityRelation() <em>To Entity Relation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToEntityRelation()
   * @generated
   * @ordered
   */
  protected String toEntityRelation = TO_ENTITY_RELATION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AddImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RegistrationDSLPackage.Literals.ADD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSelectedEntityName()
  {
    return selectedEntityName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSelectedEntityName(String newSelectedEntityName)
  {
    String oldSelectedEntityName = selectedEntityName;
    selectedEntityName = newSelectedEntityName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RegistrationDSLPackage.ADD__SELECTED_ENTITY_NAME, oldSelectedEntityName, selectedEntityName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity getToEntity()
  {
    if (toEntity != null && toEntity.eIsProxy())
    {
      InternalEObject oldToEntity = (InternalEObject)toEntity;
      toEntity = (Entity)eResolveProxy(oldToEntity);
      if (toEntity != oldToEntity)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RegistrationDSLPackage.ADD__TO_ENTITY, oldToEntity, toEntity));
      }
    }
    return toEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity basicGetToEntity()
  {
    return toEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToEntity(Entity newToEntity)
  {
    Entity oldToEntity = toEntity;
    toEntity = newToEntity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RegistrationDSLPackage.ADD__TO_ENTITY, oldToEntity, toEntity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getToEntityRelation()
  {
    return toEntityRelation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToEntityRelation(String newToEntityRelation)
  {
    String oldToEntityRelation = toEntityRelation;
    toEntityRelation = newToEntityRelation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RegistrationDSLPackage.ADD__TO_ENTITY_RELATION, oldToEntityRelation, toEntityRelation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RegistrationDSLPackage.ADD__SELECTED_ENTITY_NAME:
        return getSelectedEntityName();
      case RegistrationDSLPackage.ADD__TO_ENTITY:
        if (resolve) return getToEntity();
        return basicGetToEntity();
      case RegistrationDSLPackage.ADD__TO_ENTITY_RELATION:
        return getToEntityRelation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RegistrationDSLPackage.ADD__SELECTED_ENTITY_NAME:
        setSelectedEntityName((String)newValue);
        return;
      case RegistrationDSLPackage.ADD__TO_ENTITY:
        setToEntity((Entity)newValue);
        return;
      case RegistrationDSLPackage.ADD__TO_ENTITY_RELATION:
        setToEntityRelation((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RegistrationDSLPackage.ADD__SELECTED_ENTITY_NAME:
        setSelectedEntityName(SELECTED_ENTITY_NAME_EDEFAULT);
        return;
      case RegistrationDSLPackage.ADD__TO_ENTITY:
        setToEntity((Entity)null);
        return;
      case RegistrationDSLPackage.ADD__TO_ENTITY_RELATION:
        setToEntityRelation(TO_ENTITY_RELATION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RegistrationDSLPackage.ADD__SELECTED_ENTITY_NAME:
        return SELECTED_ENTITY_NAME_EDEFAULT == null ? selectedEntityName != null : !SELECTED_ENTITY_NAME_EDEFAULT.equals(selectedEntityName);
      case RegistrationDSLPackage.ADD__TO_ENTITY:
        return toEntity != null;
      case RegistrationDSLPackage.ADD__TO_ENTITY_RELATION:
        return TO_ENTITY_RELATION_EDEFAULT == null ? toEntityRelation != null : !TO_ENTITY_RELATION_EDEFAULT.equals(toEntityRelation);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (selectedEntityName: ");
    result.append(selectedEntityName);
    result.append(", toEntityRelation: ");
    result.append(toEntityRelation);
    result.append(')');
    return result.toString();
  }

} //AddImpl
