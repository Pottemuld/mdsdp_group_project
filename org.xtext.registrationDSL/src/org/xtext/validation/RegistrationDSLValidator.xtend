/*
 * generated by Xtext 2.25.0
 */
package org.xtext.validation

import org.eclipse.xtext.validation.Check
import org.xtext.registrationDSL.Entity
import java.util.HashSet
import org.xtext.registrationDSL.RegistrationDSLPackage.Literals

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class RegistrationDSLValidator extends AbstractRegistrationDSLValidator {
	
	@Check
	def checkNoCyclicInheritance(Entity entity) {
		val alreadySeen = new HashSet<Entity>
		alreadySeen.add(entity)
		if(entity.base.selfExtends(alreadySeen)) {
			error('Cyclic inheritance', Literals.ENTITY__BASE)
		}
	}
	
	def boolean selfExtends(Entity entity, HashSet<Entity> alreadySeen) {
		if(entity == null) {
			return false
		}
		else if (alreadySeen.contains(entity)) {
			return true
		}
		else {
			alreadySeen.add(entity)
			entity.base.selfExtends(alreadySeen)
		}
	}	
}
