/*
 * generated by Xtext 2.25.0
 */
package org.xtext.validation

import org.eclipse.xtext.validation.Check
import org.xtext.registrationDSL.Entity
import java.util.HashSet
import org.xtext.registrationDSL.RegistrationDSLPackage.Literals

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class RegistrationDSLValidator extends AbstractRegistrationDSLValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					RegistrationDSLPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	@Check
	def checkNoCyclicInharitance(Entity entity){
		val seen = new HashSet<Entity>
		seen.add(entity)
		if(entity.base.selfExtends(seen)){
			error("Cyclic inharitance", Literals.ENTITY__BASE)
		}
	}
	
	def boolean selfExtends(Entity entity, HashSet<Entity> seen){
		if(entity == null) {
			return false
		}
		else if (seen.contains(entity)){
			return true
		}
		else{
			seen.add(entity)
			entity.base.selfExtends(seen)
		}
		
		
	}
	
}
